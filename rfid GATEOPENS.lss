
rfid GATEOPENS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000290  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000c2  00800060  00000290  00000324  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000012  00800122  00800122  000003e6  2**0
                  ALLOC
  3 .stab         0000078c  00000000  00000000  000003e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000000e2  00000000  00000000  00000b74  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00000c56  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000098  00000000  00000000  00000c85  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000013de  00000000  00000000  00000d1d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000262  00000000  00000000  000020fb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000050b  00000000  00000000  0000235d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  0000014c  00000000  00000000  00002868  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002a2  00000000  00000000  000029b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007a3  00000000  00000000  00002c56  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000088  00000000  00000000  000033f9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	11 e0       	ldi	r17, 0x01	; 1
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	e0 e9       	ldi	r30, 0x90	; 144
  3a:	f2 e0       	ldi	r31, 0x02	; 2
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a2 32       	cpi	r26, 0x22	; 34
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	21 e0       	ldi	r18, 0x01	; 1
  4a:	a2 e2       	ldi	r26, 0x22	; 34
  4c:	b1 e0       	ldi	r27, 0x01	; 1
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a4 33       	cpi	r26, 0x34	; 52
  54:	b2 07       	cpc	r27, r18
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	92 d0       	rcall	.+292    	; 0x17e <main>
  5a:	18 c1       	rjmp	.+560    	; 0x28c <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <_Z8disp_cmdj>:
	_delay_ms(1000);*/
		
		if ((x>1000)&&(x<1050) && (y>390)&&(y<500))
		{
	disp_cmd(0x80);
	disp_string("1. a    2. b");
  5e:	9c 01       	movw	r18, r24
  60:	20 7f       	andi	r18, 0xF0	; 240
  62:	33 27       	eor	r19, r19
	disp_cmd(0xc0);
  64:	28 bb       	out	0x18, r18	; 24
  66:	98 b3       	in	r25, 0x18	; 24
  68:	96 95       	lsr	r25
	disp_string("3. c    4. d");
  6a:	96 95       	lsr	r25
  6c:	9e 5f       	subi	r25, 0xFE	; 254
  6e:	98 bb       	out	0x18, r25	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  70:	ef e9       	ldi	r30, 0x9F	; 159
  72:	ff e0       	ldi	r31, 0x0F	; 15
  74:	31 97       	sbiw	r30, 0x01	; 1
  76:	f1 f7       	brne	.-4      	; 0x74 <_Z8disp_cmdj+0x16>
  78:	00 c0       	rjmp	.+0      	; 0x7a <_Z8disp_cmdj+0x1c>
  7a:	00 00       	nop
  7c:	98 b3       	in	r25, 0x18	; 24
  7e:	92 50       	subi	r25, 0x02	; 2
  80:	98 bb       	out	0x18, r25	; 24
		}
		while (1)
		{
		
			
	if ((x>130)&&(x<300) && (y>100)&&(y<250))
  82:	82 95       	swap	r24
  84:	80 7f       	andi	r24, 0xF0	; 240
  86:	88 bb       	out	0x18, r24	; 24
			 disp_num(bal);
			 _delay_ms(1000);
			 //break;
		 }
	}
	else if ((x>200)&&(x<300) &&(y>850)&& (y<950))
  88:	88 b3       	in	r24, 0x18	; 24
  8a:	86 95       	lsr	r24
  8c:	86 95       	lsr	r24
  8e:	8e 5f       	subi	r24, 0xFE	; 254
		 }
		 
	 }
		
	
	else if ((x>500)&&(x<860) && (y>100)&&(y<250))
  90:	88 bb       	out	0x18, r24	; 24
  92:	8f e9       	ldi	r24, 0x9F	; 159
  94:	9f e0       	ldi	r25, 0x0F	; 15
  96:	01 97       	sbiw	r24, 0x01	; 1
		}
		while (1)
		{
		
			
	if ((x>130)&&(x<300) && (y>100)&&(y<250))
  98:	f1 f7       	brne	.-4      	; 0x96 <_Z8disp_cmdj+0x38>
  9a:	00 c0       	rjmp	.+0      	; 0x9c <_Z8disp_cmdj+0x3e>
  9c:	00 00       	nop
  9e:	88 b3       	in	r24, 0x18	; 24
  a0:	82 50       	subi	r24, 0x02	; 2
  a2:	88 bb       	out	0x18, r24	; 24
  a4:	08 95       	ret

000000a6 <_Z8lcd_initv>:
  a6:	82 e0       	ldi	r24, 0x02	; 2
  a8:	90 e0       	ldi	r25, 0x00	; 0
  aa:	d9 df       	rcall	.-78     	; 0x5e <_Z8disp_cmdj>
  ac:	88 e2       	ldi	r24, 0x28	; 40
  ae:	90 e0       	ldi	r25, 0x00	; 0
	{
		 if(bal>e)
  b0:	d6 df       	rcall	.-84     	; 0x5e <_Z8disp_cmdj>
  b2:	8c e0       	ldi	r24, 0x0C	; 12
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	d3 df       	rcall	.-90     	; 0x5e <_Z8disp_cmdj>
  b8:	86 e0       	ldi	r24, 0x06	; 6
  ba:	90 e0       	ldi	r25, 0x00	; 0
  bc:	d0 df       	rcall	.-96     	; 0x5e <_Z8disp_cmdj>
  be:	08 95       	ret

000000c0 <_Z9disp_datai>:
  c0:	9c 01       	movw	r18, r24
  c2:	20 7f       	andi	r18, 0xF0	; 240
  c4:	33 27       	eor	r19, r19
		 {
			 bal=bal-e;
  c6:	28 bb       	out	0x18, r18	; 24
  c8:	28 b3       	in	r18, 0x18	; 24
  ca:	26 95       	lsr	r18
  cc:	26 95       	lsr	r18
  ce:	2d 5f       	subi	r18, 0xFD	; 253
  d0:	28 bb       	out	0x18, r18	; 24
			 disp_cmd(0x01);
  d2:	ef e9       	ldi	r30, 0x9F	; 159
  d4:	ff e0       	ldi	r31, 0x0F	; 15
  d6:	31 97       	sbiw	r30, 0x01	; 1
  d8:	f1 f7       	brne	.-4      	; 0xd6 <_Z9disp_datai+0x16>
  da:	00 c0       	rjmp	.+0      	; 0xdc <_Z9disp_datai+0x1c>
  dc:	00 00       	nop
  de:	28 b3       	in	r18, 0x18	; 24
  e0:	23 50       	subi	r18, 0x03	; 3
  e2:	28 bb       	out	0x18, r18	; 24
			 _delay_ms(2);
			 disp_cmd(0x80);
  e4:	82 95       	swap	r24
  e6:	92 95       	swap	r25
  e8:	90 7f       	andi	r25, 0xF0	; 240
			 disp_string("CONFIRMED");
  ea:	98 27       	eor	r25, r24
  ec:	80 7f       	andi	r24, 0xF0	; 240
  ee:	98 27       	eor	r25, r24
  f0:	88 bb       	out	0x18, r24	; 24
  f2:	88 b3       	in	r24, 0x18	; 24
  f4:	86 95       	lsr	r24
  f6:	86 95       	lsr	r24
  f8:	8d 5f       	subi	r24, 0xFD	; 253
  fa:	88 bb       	out	0x18, r24	; 24
			 _delay_ms(2);
			 disp_cmd(0xc0);
  fc:	8f e9       	ldi	r24, 0x9F	; 159
  fe:	9f e0       	ldi	r25, 0x0F	; 15
 100:	01 97       	sbiw	r24, 0x01	; 1
			 disp_string("Avail Bal=");
 102:	f1 f7       	brne	.-4      	; 0x100 <_Z9disp_datai+0x40>
 104:	00 c0       	rjmp	.+0      	; 0x106 <_Z9disp_datai+0x46>
 106:	00 00       	nop
			 disp_cmd(0xcb);
 108:	88 b3       	in	r24, 0x18	; 24
 10a:	83 50       	subi	r24, 0x03	; 3
 10c:	88 bb       	out	0x18, r24	; 24
			 disp_num(bal);
 10e:	08 95       	ret

00000110 <_Z10usart_initv>:
 110:	88 e1       	ldi	r24, 0x18	; 24
 112:	8a b9       	out	0x0a, r24	; 10
 114:	8e e8       	ldi	r24, 0x8E	; 142
 116:	80 bd       	out	0x20, r24	; 32
 118:	83 e3       	ldi	r24, 0x33	; 51
 11a:	89 b9       	out	0x09, r24	; 9
 11c:	10 bc       	out	0x20, r1	; 32
 11e:	08 95       	ret

00000120 <_Z11disp_stringPc>:
 120:	cf 93       	push	r28
 122:	df 93       	push	r29
 124:	ec 01       	movw	r28, r24
 126:	88 81       	ld	r24, Y
 128:	88 23       	and	r24, r24
 12a:	31 f0       	breq	.+12     	; 0x138 <_Z11disp_stringPc+0x18>
			 //break;
		 }
		 
		 else
		 {
			 disp_cmd(0x01);
 12c:	21 96       	adiw	r28, 0x01	; 1
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	c7 df       	rcall	.-114    	; 0xc0 <_Z9disp_datai>
			 disp_cmd(0x80);
 132:	89 91       	ld	r24, Y+
 134:	81 11       	cpse	r24, r1
 136:	fb cf       	rjmp	.-10     	; 0x12e <_Z11disp_stringPc+0xe>
			 disp_string("Please Recharge");
 138:	df 91       	pop	r29
 13a:	cf 91       	pop	r28
 13c:	08 95       	ret

0000013e <_Z11usart_getchv>:
			 disp_cmd(0xc0);
 13e:	5f 9b       	sbis	0x0b, 7	; 11
 140:	fe cf       	rjmp	.-4      	; 0x13e <_Z11usart_getchv>
 142:	8c b1       	in	r24, 0x0c	; 12
			 disp_string("Avail Bal=");
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	08 95       	ret

00000148 <_Z10getcard_idv>:
 148:	cf 93       	push	r28
			 disp_cmd(0xcb);
 14a:	df 93       	push	r29
 14c:	10 92 27 01 	sts	0x0127, r1
			 disp_num(bal);
 150:	10 92 26 01 	sts	0x0126, r1
 154:	c0 e0       	ldi	r28, 0x00	; 0
 156:	d0 e0       	ldi	r29, 0x00	; 0
 158:	f2 df       	rcall	.-28     	; 0x13e <_Z11usart_getchv>
 15a:	c8 5d       	subi	r28, 0xD8	; 216
 15c:	de 4f       	sbci	r29, 0xFE	; 254
 15e:	88 83       	st	Y, r24
 160:	c0 91 26 01 	lds	r28, 0x0126
 164:	d0 91 27 01 	lds	r29, 0x0127
 168:	21 96       	adiw	r28, 0x01	; 1
 16a:	d0 93 27 01 	sts	0x0127, r29
		 }
		 
	 }
		
	
	else if ((x>500)&&(x<860) && (y>100)&&(y<250))
 16e:	c0 93 26 01 	sts	0x0126, r28
 172:	cc 30       	cpi	r28, 0x0C	; 12
 174:	d1 05       	cpc	r29, r1
 176:	80 f3       	brcs	.-32     	; 0x158 <_Z10getcard_idv+0x10>
 178:	df 91       	pop	r29
 17a:	cf 91       	pop	r28
 17c:	08 95       	ret

0000017e <main>:
 17e:	8f ef       	ldi	r24, 0xFF	; 255
 180:	87 bb       	out	0x17, r24	; 23
 182:	84 bb       	out	0x14, r24	; 20
 184:	90 df       	rcall	.-224    	; 0xa6 <_Z8lcd_initv>
 186:	8f e9       	ldi	r24, 0x9F	; 159
 188:	9f e0       	ldi	r25, 0x0F	; 15
	{
		 if(bal>=f)
 18a:	01 97       	sbiw	r24, 0x01	; 1
 18c:	f1 f7       	brne	.-4      	; 0x18a <main+0xc>
 18e:	00 c0       	rjmp	.+0      	; 0x190 <main+0x12>
 190:	00 00       	nop
 192:	be df       	rcall	.-132    	; 0x110 <_Z10usart_initv>
 194:	80 e8       	ldi	r24, 0x80	; 128
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	62 df       	rcall	.-316    	; 0x5e <_Z8disp_cmdj>
 19a:	86 ea       	ldi	r24, 0xA6	; 166
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	c0 df       	rcall	.-128    	; 0x120 <_Z11disp_stringPc>
		 {
			 bal=bal-f;
 1a0:	80 ec       	ldi	r24, 0xC0	; 192
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	5c df       	rcall	.-328    	; 0x5e <_Z8disp_cmdj>
 1a6:	87 eb       	ldi	r24, 0xB7	; 183
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	ba df       	rcall	.-140    	; 0x120 <_Z11disp_stringPc>
			 disp_cmd(0x01);
 1ac:	d1 e0       	ldi	r29, 0x01	; 1
 1ae:	c2 e0       	ldi	r28, 0x02	; 2
 1b0:	cb df       	rcall	.-106    	; 0x148 <_Z10getcard_idv>
 1b2:	8f e9       	ldi	r24, 0x9F	; 159
 1b4:	9f e0       	ldi	r25, 0x0F	; 15
 1b6:	01 97       	sbiw	r24, 0x01	; 1
 1b8:	f1 f7       	brne	.-4      	; 0x1b6 <main+0x38>
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <main+0x3e>
 1bc:	00 00       	nop
			 _delay_ms(2);
			 disp_cmd(0x80);
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	4d df       	rcall	.-358    	; 0x5e <_Z8disp_cmdj>
			 disp_string("CONFIRMED");
 1c4:	4c e0       	ldi	r20, 0x0C	; 12
 1c6:	50 e0       	ldi	r21, 0x00	; 0
 1c8:	6a e6       	ldi	r22, 0x6A	; 106
 1ca:	70 e0       	ldi	r23, 0x00	; 0
 1cc:	88 e2       	ldi	r24, 0x28	; 40
 1ce:	91 e0       	ldi	r25, 0x01	; 1
 1d0:	4f d0       	rcall	.+158    	; 0x270 <strncmp>
 1d2:	28 2f       	mov	r18, r24
 1d4:	39 2f       	mov	r19, r25
			 _delay_ms(2);
			 disp_cmd(0xc0);
 1d6:	12 16       	cp	r1, r18
 1d8:	13 06       	cpc	r1, r19
 1da:	0c f4       	brge	.+2      	; 0x1de <main+0x60>
			 disp_string("Avail Bal=");
 1dc:	42 c0       	rjmp	.+132    	; 0x262 <main+0xe4>
 1de:	81 e0       	ldi	r24, 0x01	; 1
 1e0:	90 e0       	ldi	r25, 0x00	; 0
			 disp_cmd(0xcb);
 1e2:	3d df       	rcall	.-390    	; 0x5e <_Z8disp_cmdj>
 1e4:	80 ec       	ldi	r24, 0xC0	; 192
 1e6:	90 e0       	ldi	r25, 0x00	; 0
			 disp_num(bal);
 1e8:	3a df       	rcall	.-396    	; 0x5e <_Z8disp_cmdj>
 1ea:	86 ec       	ldi	r24, 0xC6	; 198
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	98 df       	rcall	.-208    	; 0x120 <_Z11disp_stringPc>
 1f0:	9f ef       	ldi	r25, 0xFF	; 255
 1f2:	2d e3       	ldi	r18, 0x3D	; 61
 1f4:	39 e4       	ldi	r19, 0x49	; 73
 1f6:	91 50       	subi	r25, 0x01	; 1
 1f8:	20 40       	sbci	r18, 0x00	; 0
 1fa:	30 40       	sbci	r19, 0x00	; 0
 1fc:	e1 f7       	brne	.-8      	; 0x1f6 <main+0x78>
 1fe:	00 c0       	rjmp	.+0      	; 0x200 <main+0x82>
 200:	00 00       	nop
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	90 e0       	ldi	r25, 0x00	; 0
			 //break;
		 }
		 
		 else
		 {
			 disp_cmd(0x01);
 206:	2b df       	rcall	.-426    	; 0x5e <_Z8disp_cmdj>
 208:	80 e8       	ldi	r24, 0x80	; 128
 20a:	90 e0       	ldi	r25, 0x00	; 0
			 disp_cmd(0x80);
 20c:	28 df       	rcall	.-432    	; 0x5e <_Z8disp_cmdj>
 20e:	85 ed       	ldi	r24, 0xD5	; 213
 210:	90 e0       	ldi	r25, 0x00	; 0
			 disp_string("Please Recharge");
 212:	86 df       	rcall	.-244    	; 0x120 <_Z11disp_stringPc>
 214:	d5 bb       	out	0x15, r29	; 21
 216:	8a ea       	ldi	r24, 0xAA	; 170
			 disp_cmd(0xc0);
 218:	96 ee       	ldi	r25, 0xE6	; 230
 21a:	26 e9       	ldi	r18, 0x96	; 150
 21c:	31 e0       	ldi	r19, 0x01	; 1
			 disp_string("Avail Bal=");
 21e:	81 50       	subi	r24, 0x01	; 1
 220:	90 40       	sbci	r25, 0x00	; 0
 222:	20 40       	sbci	r18, 0x00	; 0
			 disp_cmd(0xcb);
 224:	30 40       	sbci	r19, 0x00	; 0
 226:	d9 f7       	brne	.-10     	; 0x21e <main+0xa0>
 228:	00 00       	nop
			 disp_num(bal);
 22a:	15 ba       	out	0x15, r1	; 21
 22c:	8f ef       	ldi	r24, 0xFF	; 255
 22e:	90 e7       	ldi	r25, 0x70	; 112
 230:	22 e0       	ldi	r18, 0x02	; 2
 232:	81 50       	subi	r24, 0x01	; 1
 234:	90 40       	sbci	r25, 0x00	; 0
 236:	20 40       	sbci	r18, 0x00	; 0
 238:	e1 f7       	brne	.-8      	; 0x232 <main+0xb4>
 23a:	00 c0       	rjmp	.+0      	; 0x23c <main+0xbe>
 23c:	00 00       	nop
 23e:	80 e8       	ldi	r24, 0x80	; 128
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	0d df       	rcall	.-486    	; 0x5e <_Z8disp_cmdj>
 244:	82 ee       	ldi	r24, 0xE2	; 226
 246:	90 e0       	ldi	r25, 0x00	; 0
			 _delay_ms(1000);
			 //break;
		 }
	}
	else if ((x>200)&&(x<300) &&(y>850)&& (y<950))
 248:	6b df       	rcall	.-298    	; 0x120 <_Z11disp_stringPc>
 24a:	c5 bb       	out	0x15, r28	; 21
 24c:	3a ea       	ldi	r19, 0xAA	; 170
 24e:	86 ee       	ldi	r24, 0xE6	; 230
 250:	96 e9       	ldi	r25, 0x96	; 150
 252:	21 e0       	ldi	r18, 0x01	; 1
 254:	31 50       	subi	r19, 0x01	; 1
 256:	80 40       	sbci	r24, 0x00	; 0
 258:	90 40       	sbci	r25, 0x00	; 0
 25a:	20 40       	sbci	r18, 0x00	; 0
 25c:	d9 f7       	brne	.-10     	; 0x254 <main+0xd6>
 25e:	00 00       	nop
 260:	a7 cf       	rjmp	.-178    	; 0x1b0 <main+0x32>
 262:	80 e8       	ldi	r24, 0x80	; 128
 264:	90 e0       	ldi	r25, 0x00	; 0
	{
		 if(bal>=g)
 266:	fb de       	rcall	.-522    	; 0x5e <_Z8disp_cmdj>
 268:	8f ee       	ldi	r24, 0xEF	; 239
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	59 df       	rcall	.-334    	; 0x120 <_Z11disp_stringPc>
 26e:	a0 cf       	rjmp	.-192    	; 0x1b0 <main+0x32>

00000270 <strncmp>:
 270:	fb 01       	movw	r30, r22
 272:	dc 01       	movw	r26, r24
 274:	41 50       	subi	r20, 0x01	; 1
 276:	50 40       	sbci	r21, 0x00	; 0
 278:	30 f0       	brcs	.+12     	; 0x286 <strncmp+0x16>
 27a:	8d 91       	ld	r24, X+
		 {
			 bal=bal-g;
 27c:	01 90       	ld	r0, Z+
 27e:	80 19       	sub	r24, r0
 280:	19 f4       	brne	.+6      	; 0x288 <strncmp+0x18>
 282:	00 20       	and	r0, r0
 284:	b9 f7       	brne	.-18     	; 0x274 <strncmp+0x4>
 286:	88 1b       	sub	r24, r24
			 disp_cmd(0x01);
 288:	99 0b       	sbc	r25, r25
 28a:	08 95       	ret

0000028c <_exit>:
 28c:	f8 94       	cli

0000028e <__stop_program>:
 28e:	ff cf       	rjmp	.-2      	; 0x28e <__stop_program>
